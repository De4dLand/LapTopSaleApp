// Generated by view binder compiler. Do not edit!
package com.example.salesapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.salesapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopularProductsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dollar;

  @NonNull
  public final ImageView popularImg;

  @NonNull
  public final TextView popularPrice;

  @NonNull
  public final TextView popularProductName;

  private PopularProductsBinding(@NonNull CardView rootView, @NonNull TextView dollar,
      @NonNull ImageView popularImg, @NonNull TextView popularPrice,
      @NonNull TextView popularProductName) {
    this.rootView = rootView;
    this.dollar = dollar;
    this.popularImg = popularImg;
    this.popularPrice = popularPrice;
    this.popularProductName = popularProductName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static PopularProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopularProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.popular_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopularProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dollar;
      TextView dollar = ViewBindings.findChildViewById(rootView, id);
      if (dollar == null) {
        break missingId;
      }

      id = R.id.popular_img;
      ImageView popularImg = ViewBindings.findChildViewById(rootView, id);
      if (popularImg == null) {
        break missingId;
      }

      id = R.id.popular_price;
      TextView popularPrice = ViewBindings.findChildViewById(rootView, id);
      if (popularPrice == null) {
        break missingId;
      }

      id = R.id.popular_product_name;
      TextView popularProductName = ViewBindings.findChildViewById(rootView, id);
      if (popularProductName == null) {
        break missingId;
      }

      return new PopularProductsBinding((CardView) rootView, dollar, popularImg, popularPrice,
          popularProductName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
